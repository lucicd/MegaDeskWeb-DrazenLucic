@page
@model MegaDeskWeb_DrazenLucic.Pages.DeskQuotes.IndexModel

@{
    ViewData["Title"] = "Desk Quotes";
}

<h1>Desk Quotes</h1>

<p>
    <a class="btn btn-outline-danger" asp-page="Create">Create Desk Quote</a>
</p>

<div class="container">
    <form class="form-inline" asp-page="./Index" method="get">
        <div class="form-group mr-2">
            <label for="SearchString">Search:</label>
            <input type="text" class="form-control ml-1" name="SearchString" id="SearchString" value="@Model.CurrentFilter" />
        </div>
        <div class="btn-group">
            <button type="submit" class="btn btn-outline-info mr-2">Search</button>
            <a asp-page="./Index" class="btn btn-outline-info">Full List</a>
        </div>
    </form>
</div>

<table class="table mt-2 table-bordered table-hover table-sm">
    <thead class="thead-light">
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.IDSort">
                    @Html.DisplayNameFor(model => model.DeskQuote[0].ID)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.CustomerSort">
                    @Html.DisplayNameFor(model => model.DeskQuote[0].Customer)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].Width)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].Depth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].NumberOfDrawers)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.MaterialSort">
                    @Html.DisplayNameFor(model => model.DeskQuote[0].SurfaceMaterial)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeskQuote[0].ProductionTime)
            </th>
            <th class="text-right">
                @Html.DisplayNameFor(model => model.DeskQuote[0].CalcDeskPrice)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.DeskQuote)
        {
        <tr>
            <td class="text-center">
                <a asp-page="./Details" asp-route-id="@item.ID">
                    @Html.DisplayFor(modelItem => item.ID)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Width) inches
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Depth) inches
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.NumberOfDrawers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SurfaceMaterial)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductionTime) days
            </td>
            <td class="text-right">
                $@Html.DisplayFor(modelItem => item.CalcDeskPrice)
            </td>
            <td>
                <div class="btn-group-sm">
                    <a class="btn btn-outline-info" asp-page="./Edit" asp-route-id="@item.ID">Edit</a>
                    <a class="btn btn-outline-info" asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </div>
            </td>
        </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.DeskQuote.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.DeskQuote.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.DeskQuote.PageIndex - 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-outline-info @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
    asp-route-sortOrder="@Model.CurrentSort"
    asp-route-pageIndex="@(Model.DeskQuote.PageIndex + 1)"
    asp-route-currentFilter="@Model.CurrentFilter"
    class="btn btn-outline-info @nextDisabled">
    Next
</a>